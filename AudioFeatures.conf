
 ///////////////////////////////////////////////////////////////////////////
 // openSMILE configuration file "demo1"				  //
 ///////////////////////////////////////////////////////////////////////////

 ;===== component manager configuration (= list of enabled components!) =====

[componentInstances:cComponentManager]
 // this line configures the default data memory:
instance[dataMemory].type=cDataMemory
instance[waveIn].type=cWaveSource
instance[fr1].type=cFramer
instance[pe2].type=cVectorPreemphasis
instance[w1].type=cWindower
instance[fft1].type=cTransformFFT
instance[fftmp1].type=cFFTmagphase
instance[mspec].type=cMelspec
instance[cms].type=cFullinputMean

instance[mfcc].type=cMfcc


instance[acf].type=cAcf
instance[cepstrum].type=cAcf
instance[pitchACF].type=cPitchACF

instance[mzcr].type=cMZcr


instance[energy].type=cEnergy


instance[cat].type=cVectorConcat

instance[delta].type=cDeltaRegression
 ; compute acceleration coefficients from delta coefficients of mfcc and energy
instance[accel].type=cDeltaRegression


instance[htkout].type = cHtkSink

 // Here you can control the amount of detail displayed for the data memory
 // level configuration. 0 is no information at all, 5 is maximum detail.
printLevelStats = 0
 // You can set the number of parallel threads (experimental):
nThreads = 1

// ============= component configuration sections begin here ==============

[waveIn:cWaveSource]
writer.dmLevel=wave
filename=\cm[inputfile(I){test.wav}:name of input file]
buffersize=4000
monoMixdown=1

[fr1:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames
copyInputName = 1
noPostEOIprocessing = 1
frameSize = 0.0230
frameStep = 0.020
frameMode = fixed
frameCenterSpecial = left
buffersize = 2500

[pe2:cVectorPreemphasis]
reader.dmLevel=frames
writer.dmLevel=framespe
copyInputName = 1
processArrayFields = 1
k=0.97
de = 0

[w1:cWindower]
reader.dmLevel=framespe
writer.dmLevel=winframe
copyInputName = 1
processArrayFields = 1
winFunc = ham
gain = 1.0
offset = 0

  // ---- LLD -----

[fft1:cTransformFFT]
reader.dmLevel=winframe
writer.dmLevel=fftc
copyInputName = 1
processArrayFields = 1
inverse = 0

[fftmp1:cFFTmagphase]
reader.dmLevel=fftc
writer.dmLevel=fftmag
copyInputName = 1
processArrayFields = 1
inverse = 0
magnitude = 1
phase = 0

[mspec:cMelspec]
reader.dmLevel=fftmag
writer.dmLevel=mspec1
copyInputName = 1
processArrayFields = 1
htkcompatible = 1
nBands = 26
usePower = 1
lofreq = 0
hifreq = 8000
inverse = 0
specScale = mel

[mfcc:cMfcc]
reader.dmLevel=mspec1
writer.dmLevel=mfcc1
copyInputName = 1
processArrayFields = 1
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
buffersize=1000
firstMfcc = 1
lastMfcc =  20
cepLifter = 22.0
htkcompatible = 1


[cms:cFullinputMean]
reader.dmLevel=mfcc1
writer.dmLevel=mfccM



[cat:cVectorConcat]
reader.dmLevel=mfcc1;energy
writer.dmLevel=ft0
processArrayFields=0





[acf:cAcf]
reader.dmLevel=fftmag
writer.dmLevel=acf
nameAppend = acf
copyInputName = 1
processArrayFields = 1
usePower = 1
cepstrum = 0

[cepstrum:cAcf]
reader.dmLevel=fftmag
writer.dmLevel=cepstrum
nameAppend = acf
copyInputName = 1
processArrayFields = 1
usePower = 1
cepstrum = 1

[pitchACF:cPitchACF]
  ; the pitchACF component must ALWAYS read from acf AND cepstrum in the given order!
reader.dmLevel=acf;cepstrum
writer.dmLevel=pitch
copyInputName = 1
processArrayFields=0
maxPitch = 500
voiceProb = 1
voiceQual = 0
HNR = 0
F0 = 0
F0raw = 0
F0env = 0
voicingCutoff = 0.15000
	

[mzcr:cMZcr]
reader.dmLevel=frames
writer.dmLevel=mzcr
copyInputName = 1
processArrayFields = 1
zcr = 1
amax = 0
mcr = 0
maxmin = 0
dc = 0


[energy:cEnergy]
reader.dmLevel=frames
writer.dmLevel=energy
nameAppend=energy
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
buffersize=1000
copyInputName = 1
processArrayFields = 0
htkcompatible=1
rms = 0
log = 1

[delta:cDeltaRegression]
reader.dmLevel=ft0
writer.dmLevel=ft0de
deltawin=4
blocksize=1

[accel:cDeltaRegression]
reader.dmLevel=ft0de
writer.dmLevel=ft0dede
deltawin=4
blocksize=1


[htkout:cHtkSink]
 ; data from the following dataMemory levels in concattenated
 ; to form the output vectors
reader.dmLevel=mfccM;energy;ft0de;ft0dede;pitch;mzcr
 ; this again defines a commandline option for the output file (see waveIn)
filename=\cm[output(O){mfcc.htk}:name of MFCC output filename (HTK format)]
append=0
 ; MFCC_E_Z = 6+64+2048 = 2118
parmKind=2118

 ; 1-20 MFC, 21 E,  22-42 de, 43-63 dede, 64 vp, 65 zcr
// ################### END OF openSMILE CONFIG FILE ######################

